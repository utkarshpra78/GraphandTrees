//https://leetcode.com/problems/number-of-provinces/

class Solution {
public:
int n;
    void dfs(int i,int n,vector<int>adj[],vector<int>&vis){
        vis[i] = 1;

        for(auto it:adj[i]){
          if(!vis[it]){
            dfs(it,n,adj,vis);
          }
        }
    }
    
    int findCircleNum(vector<vector<int>>& a) {
        n = a.size();
        vector<int>adj[n];
        for(int i=0;i<n;i++){
          for(int j=0;j<n;j++){
            if(a[i][j]){
              adj[i].push_back(j);
              adj[j].push_back(i);
            }
          }
        }
        int count = 0;

        vector<int>vis(n,0);
        for(int i=0;i<n;i++){
          if(!vis[i]){
            count++;
            dfs(i,n,adj,vis);
          }
        }
      return count;
    }
};
